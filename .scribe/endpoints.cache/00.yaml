## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User registation'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: Logout.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register new account'
      description: 'Create new user account. After registration, a confirmation link is sent to the provided e-mail address.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address.'
        required: true
        example: john@doe.com
        type: string
        custom: []
    cleanBodyParameters:
      email: john@doe.com
    fileParameters: []
    responses:
      -
        status: 200
        content: 'true'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"error":true,"message":"The provided email is already registered.","errors":{"email":["The provided email is already registered."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/register/confirm/{token}'
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate register token'
      description: 'Check validate register token from confirmation message.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: 'Register token.'
        required: true
        example: officia
        type: string
        custom: []
    cleanUrlParameters:
      token: officia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "{'email': 'john@doe.com'}"
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"error":true,"message":"The provided email is already registered.","errors":{"email":["The provided email is already registered."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/register/confirm/{token}'
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Confirm register'
      description: 'Confirm register and finish registration.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: 'Register token.'
        required: true
        example: earum
        type: string
        custom: []
    cleanUrlParameters:
      token: earum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'User first name.'
        required: true
        example: facere
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'User last name.'
        required: true
        example: vel
        type: string
        custom: []
      password:
        name: password
        description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
        required: true
        example: ',5JtcBBGy,)=J}Uqo{'
        type: string
        custom: []
      firm_identifier:
        name: firm_identifier
        description: 'User firm name.'
        required: true
        example: exercitationem
        type: string
        custom: []
      phone:
        name: phone
        description: 'User phone number.'
        required: true
        example: deleniti
        type: string
        custom: []
    cleanBodyParameters:
      firstname: facere
      lastname: vel
      password: ',5JtcBBGy,)=J}Uqo{'
      firm_identifier: exercitationem
      phone: deleniti
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"error":true,"message":"Invalid register token.","errors":{"token":["Invalid register token."]}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get token'
      description: 'Return auth bearer Token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: pcrooks@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Account password'
        required: true
        example: F^LS5(
        type: string
        custom: []
      device_name:
        name: device_name
        description: 'Device name'
        required: true
        example: maiores
        type: string
        custom: []
    cleanBodyParameters:
      email: pcrooks@example.com
      password: F^LS5(
      device_name: maiores
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"error":true,"message":"The provided credentials are incorrect.","errors":{"email":["The provided credentials are incorrect."]}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      token:
        name: token
        description: 'Auth token'
        required: false
        example: null
        type: string
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot password'
      description: 'Send password reset link'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: alexis33@example.net
        type: string
        custom: []
    cleanBodyParameters:
      email: alexis33@example.net
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"User does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: 'Send password reset link'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'forgot password token'
        required: true
        example: quaerat
        type: string
        custom: []
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: magali95@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
        required: true
        example: '){p(W-:x2v>,KXS'
        type: string
        custom: []
    cleanBodyParameters:
      token: quaerat
      email: magali95@example.org
      password: '){p(W-:x2v>,KXS'
    fileParameters: []
    responses: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
