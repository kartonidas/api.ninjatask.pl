name: 'Task time'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/task/{id}/time/start'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Start task timer'
      description: 'Start task timer (log time).'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/task/{id}/time/stop'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Stop task timer'
      description: 'Stop task timer (log time).'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 15
        type: integer
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/task/{id}/time/pause'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Pause task timer'
      description: 'Pause task timer (log time).'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/task/{id}/time'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Log task spend time'
      description: 'Log task spend time.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      started:
        name: started
        description: 'Start time.'
        required: true
        example: 3
        type: integer
        custom: []
      total:
        name: total
        description: 'Total time in seconds.'
        required: true
        example: 19
        type: integer
        custom: []
      comment:
        name: comment
        description: Comment.
        required: false
        example: vel
        type: string
        custom: []
      billable:
        name: billable
        description: Billable.
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      started: 3
      total: 19
      comment: vel
      billable: false
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/task/{id}/time/{tid}'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update log task spend time'
      description: 'Update log task spend time.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 19
        type: integer
        custom: []
      tid:
        name: tid
        description: 'Task time identifier.'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 19
      tid: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      started:
        name: started
        description: 'Start time.'
        required: false
        example: 6
        type: integer
        custom: []
      total:
        name: total
        description: 'Total time in seconds.'
        required: false
        example: 8
        type: integer
        custom: []
      comment:
        name: comment
        description: Comment.
        required: false
        example: modi
        type: string
        custom: []
      billable:
        name: billable
        description: Billable.
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      started: 6
      total: 8
      comment: modi
      billable: true
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/task/{id}/time/{tid}'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete task log time'
      description: 'Delete task log time.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 12
        type: integer
        custom: []
      tid:
        name: tid
        description: 'Task time identifier.'
        required: true
        example: 19
        type: integer
        custom: []
    cleanUrlParameters:
      id: 12
      tid: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: 'Delete status'
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/task/{id}/times'
    metadata:
      groupName: 'Task time'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get task spend time rows'
      description: 'Get task spend time rows.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Task identifier.'
        required: true
        example: 5
        type: integer
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters:
      size:
        name: size
        description: 'Number of rows. Default: 50'
        required: false
        example: 16
        type: integer
        custom: []
      page:
        name: page
        description: 'Number of page (pagination). Default: 1'
        required: false
        example: 15
        type: integer
        custom: []
    cleanQueryParameters:
      size: 16
      page: 15
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"total_rows": 100, "total_pages": "4", "current_page": 1, "has_more": true, "data": [{"id": 1, "status": "active", "task_id": "1", "user_id": 1, "started": "1680843163", "finished": 1680843163, "timer_started": 0, "total": 600, "comment": "Example comment", "billable": 0}]}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"error":true,"message":"Task does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
