name: Projects
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/projects
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get projects list'
      description: 'Return projects list.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      size:
        name: size
        description: 'Number of rows. Default: 50'
        required: false
        example: 7
        type: integer
        custom: []
      page:
        name: page
        description: 'Number of page (pagination). Default: 1'
        required: false
        example: 4
        type: integer
        custom: []
    cleanQueryParameters:
      size: 7
      page: 4
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"total_rows": 100, "total_pages": "4", "current_page": 1, "has_more": true, "data": [{"id": 1, "name": "Test project", "location": "Warsaw", "description": "", "owner": "john@doe.com", "created_at": "2020-01-01 10:00:00"}]}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: api/project
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create new project'
      description: 'Create new project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Project name.'
        required: true
        example: nemo
        type: string
        custom: []
      location:
        name: location
        description: 'Project location.'
        required: false
        example: temporibus
        type: string
        custom: []
      description:
        name: description
        description: 'Project description.'
        required: false
        example: 'Maxime voluptatem odio sed modi qui quia.'
        type: string
        custom: []
      owner:
        name: owner
        description: 'Project owner.'
        required: false
        example: quisquam
        type: string
        custom: []
    cleanBodyParameters:
      name: nemo
      location: temporibus
      description: 'Maxime voluptatem odio sed modi qui quia.'
      owner: quisquam
    fileParameters: []
    responses: []
    responseFields:
      id:
        name: id
        description: 'The id of the newly created project'
        required: false
        example: null
        type: integer
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/project/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get project details'
      description: 'Return project details.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Project identifier.'
        required: true
        example: 13
        type: integer
        custom: []
    cleanUrlParameters:
      id: 13
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"id": 1, "name": "Test project", "location": "Warsaw", "description": "", "owner": "john@doe.com", "created_at": "2020-01-01 10:00:00"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"error":true,"message":"Project does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/project/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update project'
      description: 'Update project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Project identifier.'
        required: true
        example: 10
        type: integer
        custom: []
    cleanUrlParameters:
      id: 10
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Project name.'
        required: false
        example: perspiciatis
        type: string
        custom: []
      location:
        name: location
        description: 'Project location.'
        required: false
        example: aut
        type: string
        custom: []
      description:
        name: description
        description: 'Project description.'
        required: false
        example: 'Ut quasi laboriosam quaerat similique voluptate consectetur.'
        type: string
        custom: []
      owner:
        name: owner
        description: 'Project owner.'
        required: false
        example: officia
        type: string
        custom: []
    cleanBodyParameters:
      name: perspiciatis
      location: aut
      description: 'Ut quasi laboriosam quaerat similique voluptate consectetur.'
      owner: officia
    fileParameters: []
    responses: []
    responseFields:
      status:
        name: status
        description: 'Update status'
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/project/{id}'
    metadata:
      groupName: Projects
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete project'
      description: 'Delete project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      'Authorization:': 'Bearer {TOKEN}'
    urlParameters:
      id:
        name: id
        description: 'Project identifier.'
        required: true
        example: 7
        type: integer
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"Project does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: 'Delete status'
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
