name: 'User registation'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/logout
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: Logout.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register new account'
      description: 'Create new user account. After registration, a confirmation link is sent to the provided e-mail address.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address.'
        required: true
        example: john@doe.com
        type: string
        custom: []
      source:
        name: source
        description: 'Register source. One of: app/www'
        required: false
        example: rerum
        type: string
        custom: []
    cleanBodyParameters:
      email: john@doe.com
      source: rerum
    fileParameters: []
    responses:
      -
        status: 200
        content: 'true'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"error":true,"message":"The provided email is already registered.","errors":{"email":["The provided email is already registered."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/register/confirm/{token}'
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate register token'
      description: 'Check validate register token from confirmation message.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: 'Register token.'
        required: true
        example: ullam
        type: string
        custom: []
    cleanUrlParameters:
      token: ullam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: "{'email': 'john@doe.com'}"
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"error":true,"message":"The provided email is already registered.","errors":{"email":["The provided email is already registered."]}}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/register/confirm/{token}'
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Confirm register'
      description: 'Confirm register and finish registration.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      token:
        name: token
        description: 'Register token.'
        required: true
        example: deserunt
        type: string
        custom: []
    cleanUrlParameters:
      token: deserunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      firstname:
        name: firstname
        description: 'User first name.'
        required: true
        example: ab
        type: string
        custom: []
      lastname:
        name: lastname
        description: 'User last name.'
        required: true
        example: autem
        type: string
        custom: []
      password:
        name: password
        description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
        required: true
        example: 'tuOAN()Ruj+[U,'
        type: string
        custom: []
      firm_identifier:
        name: firm_identifier
        description: 'User firm name.'
        required: true
        example: dolore
        type: string
        custom: []
      phone:
        name: phone
        description: 'User phone number.'
        required: true
        example: nisi
        type: string
        custom: []
    cleanBodyParameters:
      firstname: ab
      lastname: autem
      password: 'tuOAN()Ruj+[U,'
      firm_identifier: dolore
      phone: nisi
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"error":true,"message":"Invalid register token.","errors":{"token":["Invalid register token."]}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get token'
      description: 'Return auth bearer Token.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: yolanda.emard@example.com
        type: string
        custom: []
      password:
        name: password
        description: 'Account password'
        required: true
        example: '5AzbH9v$H"=*'
        type: string
        custom: []
      device_name:
        name: device_name
        description: 'Device name'
        required: true
        example: ipsa
        type: string
        custom: []
      firm_id:
        name: firm_id
        description: 'Firm identifier (required if e-mail address is register on two or more firms)'
        required: false
        example: 6
        type: integer
        custom: []
    cleanBodyParameters:
      email: yolanda.emard@example.com
      password: '5AzbH9v$H"=*'
      device_name: ipsa
      firm_id: 6
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"error":true,"message":"The provided credentials are incorrect.","errors":{"email":["The provided credentials are incorrect."]}}'
        headers: []
        description: ''
        custom: []
    responseFields:
      token:
        name: token
        description: 'Auth token'
        required: false
        example: null
        type: string
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Forgot password'
      description: 'Send password reset link'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: loyce.abshire@example.net
        type: string
        custom: []
      firm_id:
        name: firm_id
        description: 'Firm identifier (if e-mail address exist in more than once firms)'
        required: false
        example: 15
        type: integer
        custom: []
    cleanBodyParameters:
      email: loyce.abshire@example.net
      firm_id: 15
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"error":true,"message":"User does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/reset-password
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Validate token reset password'
      description: 'Validate token reset password'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'forgot password token'
        required: true
        example: ut
        type: string
        custom: []
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: omckenzie@example.org
        type: string
        custom: []
    cleanBodyParameters:
      token: ut
      email: omckenzie@example.org
    fileParameters: []
    responses: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset password'
      description: 'Send password reset link'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'forgot password token'
        required: true
        example: error
        type: string
        custom: []
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: block.nels@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'User password (min 8 characters, lowercase and uppercase letters, number, special characters).'
        required: true
        example: 'w,@9b?\?^=Ke'
        type: string
        custom: []
    cleanBodyParameters:
      token: error
      email: block.nels@example.net
      password: 'w,@9b?\?^=Ke'
    fileParameters: []
    responses: []
    responseFields:
      status:
        name: status
        description: Status
        required: false
        example: null
        type: boolean
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/get-email-firm-ids
    metadata:
      groupName: 'User registation'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get email firm ids'
      description: |-
        Get user email assigned firm identifiers
        Because e-mail addresses may be repeated within other companies, if the e-mail address exists more than once,
        you must enter the company ID when logging in / remembering the password.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      email:
        name: email
        description: 'Account e-mail address'
        required: true
        example: parisian.alexandra@example.net
        type: string
        custom: []
    cleanQueryParameters:
      email: parisian.alexandra@example.net
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id": 1, "name": "Example Firm"}]'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"error":true,"message":"User does not exist"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
